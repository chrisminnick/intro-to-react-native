{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useQuery, gql } from '@apollo/client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CODERS_QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query coders {\\n    coders {\\n      id\\n      name\\n      description\\n    }\\n  }\\n\"])));\nexport default function CodersList() {\n  var _useQuery = useQuery(CODERS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return _jsx(Text, {\n    children: \"Loading...\"\n  });\n  if (error) return _jsxs(Text, {\n    children: [\"Error! \", error.message]\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: data.coders.map(function (coder) {\n      return _jsxs(View, {\n        className: \"coder\",\n        children: [_jsx(Text, {\n          children: coder.name\n        }), _jsx(Text, {\n          children: coder.description\n        })]\n      }, coder.id);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["useQuery","gql","CODERS_QUERY","CodersList","loading","error","data","message","styles","container","coders","map","coder","name","description","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/chrisminnick/code/src/github.com/chrisminnick/intro-to-react-native/coder-fit/screens/CodersList.js"],"sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\nimport { useQuery, gql } from '@apollo/client';\n\nexport const CODERS_QUERY = gql`\n  query coders {\n    coders {\n      id\n      name\n      description\n    }\n  }\n`;\n\nexport default function CodersList() {\n  const { loading, error, data } = useQuery(CODERS_QUERY);\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error! {error.message}</Text>;\n\n  return (\n    <View style={styles.container}>\n      {data.coders.map((coder) => (\n        <View className=\"coder\" key={coder.id}>\n          <Text>{coder.name}</Text>\n          <Text>{coder.description}</Text>\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;;;;;;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,OAAO,IAAMC,YAAY,GAAGD,GAAH,iKAAlB;AAUP,eAAe,SAASE,UAAT,GAAsB;EACnC,gBAAiCH,QAAQ,CAACE,YAAD,CAAzC;EAAA,IAAQE,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB;;EACA,IAAIF,OAAJ,EAAa,OAAO,KAAC,IAAD;IAAA;EAAA,EAAP;EACb,IAAIC,KAAJ,EAAW,OAAO,MAAC,IAAD;IAAA,sBAAcA,KAAK,CAACE,OAApB;EAAA,EAAP;EAEX,OACE,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,UACGH,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgB,UAACC,KAAD;MAAA,OACf,MAAC,IAAD;QAAM,SAAS,EAAC,OAAhB;QAAA,WACE,KAAC,IAAD;UAAA,UAAOA,KAAK,CAACC;QAAb,EADF,EAEE,KAAC,IAAD;UAAA,UAAOD,KAAK,CAACE;QAAb,EAFF;MAAA,GAA6BF,KAAK,CAACG,EAAnC,CADe;IAAA,CAAhB;EADH,EADF;AAUD;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}