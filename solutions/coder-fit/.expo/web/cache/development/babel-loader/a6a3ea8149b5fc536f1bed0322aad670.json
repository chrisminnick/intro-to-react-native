{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useQuery, gql } from '@apollo/client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var CODERS_QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  query coders {\\n    coders {\\n      id\\n      name\\n      description\\n    }\\n  }\\n\"])));\nexport default function CoderFit() {\n  var _useQuery = useQuery(CODERS_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \" + error.message;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [coders.map(function (coder) {\n      return _jsxs(\"div\", {\n        className: \"coder\",\n        children: [_jsx(\"h2\", {\n          children: coder.name\n        }), _jsx(\"p\", {\n          children: coder.description\n        })]\n      }, coder.id);\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useQuery","gql","CODERS_QUERY","CoderFit","loading","error","data","message","styles","container","coders","map","coder","name","description","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/chrisminnick/code/src/github.com/chrisminnick/intro-to-react-native/coder-fit/CoderFit.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useQuery, gql } from '@apollo/client';\n\nexport const CODERS_QUERY = gql`\n  query coders {\n    coders {\n      id\n      name\n      description\n    }\n  }\n`;\n\nexport default function CoderFit() {\n  const { loading, error, data } = useQuery(CODERS_QUERY);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <View style={styles.container}>\n      {coders.map((coder) => (\n        <div className=\"coder\" key={coder.id}>\n          <h2>{coder.name}</h2>\n          <p>{coder.description}</p>\n        </div>\n      ))}\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,OAAO,IAAMC,YAAY,GAAGD,GAAH,iKAAlB;AAUP,eAAe,SAASE,QAAT,GAAoB;EACjC,gBAAiCH,QAAQ,CAACE,YAAD,CAAzC;EAAA,IAAQE,OAAR,aAAQA,OAAR;EAAA,IAAiBC,KAAjB,aAAiBA,KAAjB;EAAA,IAAwBC,IAAxB,aAAwBA,IAAxB;;EACA,IAAIF,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,mBAAiBA,KAAK,CAACE,OAAvB;EAEX,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACGC,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;MAAA,OACV;QAAK,SAAS,EAAC,OAAf;QAAA,WACE;UAAA,UAAKA,KAAK,CAACC;QAAX,EADF,EAEE;UAAA,UAAID,KAAK,CAACE;QAAV,EAFF;MAAA,GAA4BF,KAAK,CAACG,EAAlC,CADU;IAAA,CAAX,CADH,EAOE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAPF;EAAA,EADF;AAWD;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}